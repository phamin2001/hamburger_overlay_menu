.menu-wrap {
  /* We want to Keep its position */
  position: fixed;
  top: 0;
  left: 0;
  z-index: 1;
}

.menu-wrap .toggler {
  position: absolute;
  top: 0;
  left: 0;
  /* We always want it to be on top */
  z-index: 2;
  cursor: pointer;
  width: 50px;
  height: 50px;
  opacity: 0;
}

.menu-wrap .hamburger {
  /* Want square in the same spot as checkbox */
  position: absolute;
  top: 0;
  left: 0;
  /* Want it under a checkbox */
  z-index: 1;
  width: 60px;
  height: 60px;
  padding: 1rem;
  background: var(--primary-color);
  /* becaue div inside will take care of the lines, therefore
  we set a display:flex for .hamburger */
  display: flex;
  /* Center everything */
  justify-content: center;
  align-items: center;
}

/* Hamburger Line */
/* we are creating a middle line of hamburger menu */
.menu-wrap .hamburger > div {
  position: relative;
  /* for safety to avoid shrink (check MDN reference) */
  flex: none;
  width: 100%;
  height: 2px;
  background: #fff;
  display: flex;
  align-items: center;
  justify-content: center;
  transition: all 0.4s ease;
}

/* Hamburger Lines - Top & Bottom */
.menu-wrap .hamburger > div::before,
.menu-wrap .hamburger > div::after {
  content: '';
  /* position is absolute to relative div (actual div in above) */
  position: absolute;
  z-index: 1;
  top: -10px;
  width: 100%;
  height: 2px;
  background: inherit;
}

/* Moves Line Down */
.menu-wrap .hamburger > div::after {
  top: 10px;
}

/* Toggler Animation */
.menu-wrap .toggler:checked + .hamburger > div {
  transform: rotate(135deg);
}

/* Turns Line into X */
.menu-wrap .toggler:checked + .hamburger > div::before,
.menu-wrap .toggler:checked + .hamburger > div::after {
  top: 0;
  transform: rotate(90deg);
}

/* Rotate on Hover When Checked */
.menu-wrap .toggler:checked:hover + .hamburger > div {
  transform: rotate(225deg);
}

/* Show Menu */
.menu-wrap .toggler:checked ~ .menu {
  /* To visibility works fine we need to 
  make sure inner div is visible */
  visibility: visible;
}

.menu-wrap .toggler:checked ~ .menu > div {
  transform: scale(1);
  transition: var(--menu-speed);
}

/* The last one, which brings the items in 
because it's set the opacity:0*/
.menu-wrap .toggler:checked ~ .menu > div > div {
  opacity: 1;
  transition: opacity 0.4s ease 0.4s;
}

.menu-wrap .menu {
  position: fixed;
  top: 0;
  left: 0;
  /* Want overlay all horizontal and vertical */
  width: 100%;
  height: 100%;
  visibility: hidden;
  overflow: hidden;
  /* We want to center everything 
  therefore we set display as flex */
  display: flex;
  justify-content: center;
  align-items: center;
}

/* Take care of overlay which is a dark part */
.menu-wrap .menu > div {
  background-color: var(--overlay-color);
  /* 1- We want a circle and it needs to go beyound a screen 
  therefor we choose view port scale. For making a circle
  for both width and height we choose same scale*/
  width: 300vw;
  height: 300vw;
  /* 2- For making it circle we also need border-radius */
  border-radius: 50%;
  /* 3- Also we have to avoid shrink in flex, therefor
  we set flex:none */
  display: flex;
  flex: none;
  justify-content: center;
  align-items: center;
  /* For animation we need a transition
  butt becuase we want it to start off with scale of 0
  we need to add transform with scale(0) before transition  */
  /* Also check .menu-wrap .toggler:checked ~ .menu > div 
  above */
  transform: scale(0);
  transition: all 0.4s ease;
}

/* Now working on LIs */
.menu-wrap .menu > div > div {
  text-align: center;
  max-width: 90vw;
  max-height: 100vh;
  /* At Starting point nothing shows */
  /* check: .menu-wrap .toggler:checked ~ .menu > div > div
  above */
  opacity: 0;
  transition: opacity 0es ease;
}

.menu-wrap .menu > div > div > ul > li {
  color: #fff;
  list-style: none;
  font-size: 1.5rem;
  padding: 1rem;
}

.menu-wrap .menu > div > div > ul > li > a {
  color: inherit;
  text-decoration: none;
  transition: color 0.4s ease;
}

.menu-wrap .menu > div > div > ul > li > a:hover {
  color: var(--secondary-color);
}
